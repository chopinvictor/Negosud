// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Negosud.Context;

#nullable disable

namespace Negosud.Migrations
{
    [DbContext(typeof(NegosudContext))]
    partial class NegosudContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Negosud.Class.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("adresseClient")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("codePostalClient")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("emailClient")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("nomClient")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("paysClient")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("prenomClient")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("telephoneClient")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.Property<int>("transactionID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transactionID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Negosud.Class.Domaine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("adresseDomaine")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("codePostalDomaine")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("nomDomaine")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("paysDomaine")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Domaines");
                });

            modelBuilder.Entity("Negosud.Class.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("adresseFournisseur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("codePostalFournisseur")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("emailFournisseur")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("nomFournisseur")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("paysFournisseur")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("telephoneFournisseur")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.Property<int>("transactionID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("transactionID");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("Negosud.Class.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<int>("domaineID")
                        .HasColumnType("int");

                    b.Property<string>("nomProduit")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("typeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.HasIndex("domaineID");

                    b.HasIndex("typeID");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("Negosud.Class.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("entreesortie")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("nbrProduit")
                        .HasColumnType("int");

                    b.Property<int>("remise")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Negosud.Class.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nomType")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Negosud.Class.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("admin")
                        .HasMaxLength(80)
                        .HasColumnType("tinyint(80)");

                    b.Property<string>("nomUser")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Negosud.Class.Client", b =>
                {
                    b.HasOne("Negosud.Class.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("transactionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Negosud.Class.Fournisseur", b =>
                {
                    b.HasOne("Negosud.Class.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("transactionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Negosud.Class.Produit", b =>
                {
                    b.HasOne("Negosud.Class.Transaction", null)
                        .WithMany("Produits")
                        .HasForeignKey("TransactionId");

                    b.HasOne("Negosud.Class.Domaine", "Domaine")
                        .WithMany()
                        .HasForeignKey("domaineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Negosud.Class.Type", "Type")
                        .WithMany()
                        .HasForeignKey("typeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domaine");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Negosud.Class.Transaction", b =>
                {
                    b.Navigation("Produits");
                });
#pragma warning restore 612, 618
        }
    }
}
